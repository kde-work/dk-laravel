<?php declare(strict_types=1);

/**
 * Datince - REST API
 * REST API for Datince.
 * PHP version 8.1
 *
 * The version of the OpenAPI document: 2.0.6
 * Contact: avbaryshev@yandex.ru
 *
 * NOTE: This class is auto generated by OpenAPI-Generator
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 * Source files are located at:
 *
 * > https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/resources/php-laravel/
 */


namespace OpenAPI\Server\Api;


interface UserApiInterface {


    /**
     * Operation userDelete
     *
     * Delete user
     * @return \OpenAPI\Server\Model\NoContent204
     */
    public function userDelete(
    ):
        \OpenAPI\Server\Model\NoContent204
    ;


    /**
     * Operation userEmailPatch
     *
     * Update user email
     * @param null | \OpenAPI\Server\Model\UserEmailPatchRequest $userEmailPatchRequest
     * @return \OpenAPI\Server\Model\User
     */
    public function userEmailPatch(
            ?\OpenAPI\Server\Model\UserEmailPatchRequest $userEmailPatchRequest,
    ):
        \OpenAPI\Server\Model\User
    ;


    /**
     * Operation userGet
     *
     * Get user profile
     * @return \OpenAPI\Server\Model\User
     */
    public function userGet(
    ):
        \OpenAPI\Server\Model\User
    ;


    /**
     * Operation userPasswordPatch
     *
     * Update password
     * @param null | \OpenAPI\Server\Model\UserPasswordPatchRequest $userPasswordPatchRequest
     * @return \OpenAPI\Server\Model\NoContent200
     */
    public function userPasswordPatch(
            ?\OpenAPI\Server\Model\UserPasswordPatchRequest $userPasswordPatchRequest,
    ):
        \OpenAPI\Server\Model\NoContent200
    ;


    /**
     * Operation userPhotoPatch
     *
     * Update main photo
     * @param null | \Illuminate\Http\UploadedFile $photo
     * @return \OpenAPI\Server\Model\NoContent200
     */
    public function userPhotoPatch(
            ?\Illuminate\Http\UploadedFile $photo,
    ):
        \OpenAPI\Server\Model\NoContent200
    ;


    /**
     * Operation userPhotoPhotoIdDelete
     *
     * Delete user photo
     * @param string $photoId
     * @return \OpenAPI\Server\Model\NoContent204 | \OpenAPI\Server\Model\ErrorResponse
     */
    public function userPhotoPhotoIdDelete(
            string $photoId,
    ):
        \OpenAPI\Server\Model\NoContent204 | 
        \OpenAPI\Server\Model\ErrorResponse
    ;


    /**
     * Operation userPhotosPatch
     *
     * Update photos collection
     * @param null | \Illuminate\Http\UploadedFile[] $photos
     * @return \OpenAPI\Server\Model\NoContent200
     */
    public function userPhotosPatch(
            ?array $photos,
    ):
        \OpenAPI\Server\Model\NoContent200
    ;


    /**
     * Operation userPut
     *
     * Update user profile
     * @param null | \OpenAPI\Server\Model\User $user
     * @return \OpenAPI\Server\Model\NoContent200
     */
    public function userPut(
            ?\OpenAPI\Server\Model\User $user,
    ):
        \OpenAPI\Server\Model\NoContent200
    ;


    /**
     * Operation userSupportPost
     *
     * Submit support request
     * @param null | string $theme
     * @param null | string $text
     * @param null | \Illuminate\Http\UploadedFile $file
     * @return \OpenAPI\Server\Model\NoContent200
     */
    public function userSupportPost(
            ?string $theme,
            ?string $text,
            ?\Illuminate\Http\UploadedFile $file,
    ):
        \OpenAPI\Server\Model\NoContent200
    ;


    /**
     * Operation userUserIdGet
     *
     * Get user profile
     * @param string $userId
     * @return \OpenAPI\Server\Model\User
     */
    public function userUserIdGet(
            string $userId,
    ):
        \OpenAPI\Server\Model\User
    ;

}
